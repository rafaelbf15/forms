// <auto-generated />
using System;
using Forms.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forms.Data.Migrations
{
    [DbContext(typeof(FormularioContext))]
    [Migration("20240602194319_InitialForms")]
    partial class InitialForms
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Forms.Business.Models.AnexoForms", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Arquivo")
                        .HasColumnType("varchar(400)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataUltimaModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("RespostaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("varchar(400)");

                    b.Property<string>("ThumbnailMedio")
                        .HasColumnType("varchar(400)");

                    b.HasKey("Id");

                    b.HasIndex("RespostaId");

                    b.ToTable("forms_anexos", (string)null);
                });

            modelBuilder.Entity("Forms.Business.Models.Formulario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(2000)");

                    b.Property<Guid>("ResponsavelAlteracao")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResponsavelCadastro")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResponsavelExclusao")
                        .HasColumnType("char(36)");

                    b.Property<string>("Titulo")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("VisualizacaoTodos")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("forms_formularios", (string)null);
                });

            modelBuilder.Entity("Forms.Business.Models.Pergunta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("AnexoObrigatorio")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FormularioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResponsavelAlteracao")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResponsavelCadastro")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResponsavelExclusao")
                        .HasColumnType("char(36)");

                    b.Property<bool>("TextoObrigatorio")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Titulo")
                        .HasColumnType("varchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId");

                    b.ToTable("forms_perguntas", (string)null);
                });

            modelBuilder.Entity("Forms.Business.Models.ResponsavelRecebimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(400)");

                    b.Property<Guid>("FormularioId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(400)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId");

                    b.ToTable("forms_responsaveis_recebimentos", (string)null);
                });

            modelBuilder.Entity("Forms.Business.Models.Resposta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataPreenchimento")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IdFormulario")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PerguntaId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResponsavelCadastro")
                        .HasColumnType("char(36)");

                    b.Property<string>("Texto")
                        .HasColumnType("varchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("PerguntaId");

                    b.ToTable("forms_respostas", (string)null);
                });

            modelBuilder.Entity("Forms.Business.Models.AnexoForms", b =>
                {
                    b.HasOne("Forms.Business.Models.Resposta", "Resposta")
                        .WithMany("Anexos")
                        .HasForeignKey("RespostaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resposta");
                });

            modelBuilder.Entity("Forms.Business.Models.Pergunta", b =>
                {
                    b.HasOne("Forms.Business.Models.Formulario", "Formulario")
                        .WithMany("Perguntas")
                        .HasForeignKey("FormularioId")
                        .IsRequired();

                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("Forms.Business.Models.ResponsavelRecebimento", b =>
                {
                    b.HasOne("Forms.Business.Models.Formulario", "Formulario")
                        .WithMany("ResponsaveisRecebimento")
                        .HasForeignKey("FormularioId")
                        .IsRequired();

                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("Forms.Business.Models.Resposta", b =>
                {
                    b.HasOne("Forms.Business.Models.Pergunta", "Pergunta")
                        .WithMany("Respostas")
                        .HasForeignKey("PerguntaId")
                        .IsRequired();

                    b.Navigation("Pergunta");
                });

            modelBuilder.Entity("Forms.Business.Models.Formulario", b =>
                {
                    b.Navigation("Perguntas");

                    b.Navigation("ResponsaveisRecebimento");
                });

            modelBuilder.Entity("Forms.Business.Models.Pergunta", b =>
                {
                    b.Navigation("Respostas");
                });

            modelBuilder.Entity("Forms.Business.Models.Resposta", b =>
                {
                    b.Navigation("Anexos");
                });
#pragma warning restore 612, 618
        }
    }
}
